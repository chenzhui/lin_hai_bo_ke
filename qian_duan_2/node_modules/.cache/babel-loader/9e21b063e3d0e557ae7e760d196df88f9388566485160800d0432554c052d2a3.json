{"ast":null,"code":"import * as THREE from 'three';\nimport * as dat from 'dat.gui';\nimport Stats from \"three/addons/libs/stats.module\";\nconst canvas = document.createElement('canvas');\nvar stats0 = initStats();\ncanvas.width = 800;\ncanvas.height = 800;\ndocument.body.appendChild(canvas);\nconst scene = new THREE.Scene();\nscene.background = new THREE.Color(\"white\");\nconst loader = new THREE.TextureLoader();\nconst renderer = new THREE.WebGLRenderer({\n  canvas: canvas\n});\nconst group = new THREE.Object3D();\ngroup.position.set(1, 0, 0);\nconst pg = new THREE.PlaneBufferGeometry(1000, 200, 1, 1);\nconst pm = new THREE.MeshBasicMaterial({\n  color: 0xcccccc\n});\nconst p = new THREE.Mesh(pg, pm);\np.rotation.x = 15;\np.rotation.y = 0;\np.rotation.z = 0;\np.rotation.x = -0.5 * Math.PI;\nscene.add(p);\nconst cube = new THREE.BoxGeometry(20, 20, 20);\nconst uptexture = loader.load('http://114.55.38.94:8001/api/picture/up.jpg');\nconst downtexture = loader.load('http://114.55.38.94:8001/api/picture/down.jpg');\nconst lefttexture = loader.load('http://114.55.38.94:8001/api/picture/left.jpg');\nconst righttexture = loader.load('http://114.55.38.94:8001/api/picture/right.jpg');\nconst fronttexture = loader.load('http://114.55.38.94:8001/api/picture/front.jpg');\nconst backtexture = loader.load('http://114.55.38.94:8001/api/picture/back.jpg');\nconst upmaterial = new THREE.MeshLambertMaterial({\n  map: uptexture\n});\nconst downmaterial = new THREE.MeshLambertMaterial({\n  map: downtexture\n});\nconst leftmaterial = new THREE.MeshLambertMaterial({\n  map: lefttexture\n});\nconst rightmaterial = new THREE.MeshLambertMaterial({\n  map: righttexture\n});\nconst frontmaterial = new THREE.MeshLambertMaterial({\n  map: fronttexture\n});\nconst backmaterial = new THREE.MeshLambertMaterial({\n  map: backtexture\n});\nconst material = [upmaterial, downmaterial, leftmaterial, rightmaterial, frontmaterial, backmaterial];\nconst cube_object = new THREE.Mesh(cube, material);\ncube_object.position.set(0, 0, 0);\ngroup.add(cube_object);\nconst camera = new THREE.PerspectiveCamera();\n//camera.position.set(200, 200, 200);\ncamera.position.set(200, 200, 200);\ncamera.lookAt(0, 0, 0);\nconst axis = new THREE.Vector3(0, 1, 0);\nRender();\nfunction Render() {\n  stats0.update();\n  requestAnimationFrame(Render);\n  renderer.render(scene, camera);\n}\nfunction initStats() {\n  var stats = new Stats();\n  stats.setMode(0); // 0: fps, 1: ms\n\n  // Align top-left\n  stats.domElement.style.position = 'absolute';\n  stats.domElement.style.left = '0px';\n  stats.domElement.style.top = '0px';\n  canvas.appendChild(stats.domElement);\n  return stats;\n}","map":{"version":3,"names":["THREE","dat","Stats","canvas","document","createElement","stats0","initStats","width","height","body","appendChild","scene","Scene","background","Color","loader","TextureLoader","renderer","WebGLRenderer","group","Object3D","position","set","pg","PlaneBufferGeometry","pm","MeshBasicMaterial","color","p","Mesh","rotation","x","y","z","Math","PI","add","cube","BoxGeometry","uptexture","load","downtexture","lefttexture","righttexture","fronttexture","backtexture","upmaterial","MeshLambertMaterial","map","downmaterial","leftmaterial","rightmaterial","frontmaterial","backmaterial","material","cube_object","camera","PerspectiveCamera","lookAt","axis","Vector3","Render","update","requestAnimationFrame","render","stats","setMode","domElement","style","left","top"],"sources":["D:\\lin_hai_bo_ke\\qian_duan_2\\src\\Views\\Threee1.vue"],"sourcesContent":["<template>\r\n  <canvas></canvas>\r\n</template>\r\n<script>\r\n  import * as THREE from 'three'\r\n  import * as dat from 'dat.gui'\r\n  import Stats from \"three/addons/libs/stats.module\";\r\n\r\n  const canvas=document.createElement('canvas')\r\n  var stats0 = initStats();\r\n\r\n  canvas.width=800;\r\n  canvas.height=800;\r\n\r\n  document.body.appendChild(canvas)\r\n  const scene=new THREE.Scene();\r\n  scene.background=new THREE.Color(\"white\")\r\n  const loader = new THREE.TextureLoader();\r\n  const renderer = new THREE.WebGLRenderer({canvas:canvas});\r\n  const group=new THREE.Object3D();\r\n  group.position.set(1,0,0)\r\n\r\n  const pg= new THREE.PlaneBufferGeometry(1000,200, 1, 1);\r\n  const pm = new THREE.MeshBasicMaterial({color: 0xcccccc});\r\n  const p = new THREE.Mesh(pg,pm);\r\n  p.rotation.x= 15\r\n  p.rotation.y=0\r\n  p.rotation.z=0\r\n  p.rotation.x=-0.5*Math.PI;\r\n  scene.add(p)\r\n\r\n  const cube = new THREE.BoxGeometry(20, 20, 20);\r\n  const uptexture=loader.load('http://114.55.38.94:8001/api/picture/up.jpg');\r\n  const downtexture=loader.load('http://114.55.38.94:8001/api/picture/down.jpg');\r\n  const lefttexture=loader.load('http://114.55.38.94:8001/api/picture/left.jpg');\r\n  const righttexture=loader.load('http://114.55.38.94:8001/api/picture/right.jpg');\r\n  const fronttexture=loader.load('http://114.55.38.94:8001/api/picture/front.jpg');\r\n  const backtexture=loader.load('http://114.55.38.94:8001/api/picture/back.jpg');\r\n  const upmaterial = new THREE.MeshLambertMaterial({map: uptexture});\r\n  const downmaterial = new THREE.MeshLambertMaterial({map: downtexture});\r\n  const leftmaterial = new THREE.MeshLambertMaterial({map: lefttexture});\r\n  const rightmaterial = new THREE.MeshLambertMaterial({map: righttexture});\r\n  const frontmaterial = new THREE.MeshLambertMaterial({map: fronttexture});\r\n  const backmaterial = new THREE.MeshLambertMaterial({map: backtexture});\r\n  const material=[upmaterial,downmaterial,leftmaterial,rightmaterial,frontmaterial,backmaterial]\r\n  const cube_object = new THREE.Mesh(cube, material);\r\n  cube_object.position.set(0,0,0)\r\n  group.add(cube_object);\r\n\r\n  const camera = new THREE.PerspectiveCamera();\r\n  //camera.position.set(200, 200, 200);\r\n  camera.position.set(200, 200, 200);\r\n  camera.lookAt(0, 0, 0);\r\n  const axis=new THREE.Vector3(0,1,0)\r\n  Render();\r\n\r\n\r\n  function Render() {\r\n    stats0.update();\r\n    requestAnimationFrame(Render);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function initStats() {\r\n\r\n    var stats= new Stats();\r\n\r\n    stats.setMode(0); // 0: fps, 1: ms\r\n\r\n    // Align top-left\r\n    stats.domElement.style.position = 'absolute';\r\n    stats.domElement.style.left = '0px';\r\n    stats.domElement.style.top = '0px';\r\n\r\n    canvas.appendChild(stats.domElement);\r\n\r\n    return stats;\r\n  }\r\n\r\n\r\n\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}