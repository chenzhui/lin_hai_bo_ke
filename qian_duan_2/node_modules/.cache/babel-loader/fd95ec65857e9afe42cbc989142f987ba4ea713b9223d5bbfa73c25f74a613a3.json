{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["D:\\lin_hai_bo_ke\\qian_duan_2\\src\\Views\\Threee1.vue"],"sourcesContent":["<template>\r\n  <canvas></canvas>\r\n</template>\r\n<script>\r\n  import * as THREE from 'three'\r\n  import * as dat from 'dat.gui'\r\n  import Stats from \"three/addons/libs/stats.module\";\r\n\r\n  const canvas=document.createElement('canvas')\r\n  var stats0 = initStats();\r\n\r\n  canvas.width=800;\r\n  canvas.height=800;\r\n\r\n  document.body.appendChild(canvas)\r\n  const scene=new THREE.Scene();\r\n  scene.background=new THREE.Color(\"white\")\r\n  const loader = new THREE.TextureLoader();\r\n  const renderer = new THREE.WebGLRenderer({canvas:canvas});\r\n  const group=new THREE.Object3D();\r\n  group.position.set(1,0,0)\r\n\r\n  const pg= new THREE.PlaneBufferGeometry(1000,200, 1, 1);\r\n  const pm = new THREE.MeshBasicMaterial({color: 0xcccccc});\r\n  const p = new THREE.Mesh(pg,pm);\r\n  p.rotation.x= 15\r\n  p.rotation.y=0\r\n  p.rotation.z=0\r\n  p.rotation.x=-0.5*Math.PI;\r\n  scene.add(p)\r\n\r\n  const cube = new THREE.BoxGeometry(20, 20, 20);\r\n  const texture=loader.load('http://114.55.38.94:8001/picture/wenli2.jpg');\r\n  const material = new THREE.MeshLambertMaterial({map: texture});\r\n  const cube_object = new THREE.Mesh(cube, material);\r\n  cube_object.position.set(40,50,0)\r\n  cube_object.rotation.set(0,0,0)\r\n  group.add(cube_object);\r\n\r\n  const camera = new THREE.PerspectiveCamera();\r\n  //camera.position.set(200, 200, 200);\r\n  camera.position.set(200, 200, 200);\r\n  camera.lookAt(0, 0, 0);\r\n  const axis=new THREE.Vector3(0,1,0)\r\n  Render();\r\n\r\n\r\n  function Render() {\r\n    stats0.update();\r\n    requestAnimationFrame(Render);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function initStats() {\r\n\r\n    var stats= new Stats();\r\n\r\n    stats.setMode(0); // 0: fps, 1: ms\r\n\r\n    // Align top-left\r\n    stats.domElement.style.position = 'absolute';\r\n    stats.domElement.style.left = '0px';\r\n    stats.domElement.style.top = '0px';\r\n\r\n    canvas.appendChild(stats.domElement);\r\n\r\n    return stats;\r\n  }\r\n\r\n\r\n\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}