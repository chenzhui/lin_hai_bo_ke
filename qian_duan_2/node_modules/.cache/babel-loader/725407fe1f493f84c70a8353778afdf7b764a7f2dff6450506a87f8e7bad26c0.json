{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["D:\\lin_hai_bo_ke\\qian_duan_2\\src\\Views\\Threee1.vue"],"sourcesContent":["<template>\r\n  <canvas></canvas>\r\n</template>\r\n<script>\r\nimport * as THREE from 'three'\r\nimport * as dat from 'dat.gui'\r\nimport Stats from \"three/addons/libs/stats.module\";\r\n\r\nconst canvas=document.createElement('canvas')\r\nvar stats0 = initStats();\r\n\r\ncanvas.width=800;\r\ncanvas.height=800;\r\n\r\ndocument.body.appendChild(canvas)\r\nconst scene=new THREE.Scene();\r\nscene.background=new THREE.Color(\"white\")\r\nconst loader = new THREE.TextureLoader();\r\nconst renderer = new THREE.WebGLRenderer({canvas:canvas});\r\nconst group=new THREE.Object3D();\r\ngroup.position.set(1,0,0)\r\n\r\nconst pg= new THREE.PlaneBufferGeometry(1000,200, 1, 1);\r\nconst pm = new THREE.MeshBasicMaterial({color: 0xcccccc});\r\nconst p = new THREE.Mesh(pg,pm);\r\np.rotation.x= 15\r\np.rotation.y=0\r\np.rotation.z=0\r\np.rotation.x=-0.5*Math.PI;\r\nscene.add(p)\r\n\r\nconst yuan = new THREE.SphereGeometry(40, 40, 40);\r\nconst texture_2=loader.load('http://114.55.38.94:8001/picture/wenli3.jpg');\r\nconst material_2 = new THREE.MeshLambertMaterial({map: texture_2});\r\nconst yuan_object= new THREE.Mesh(yuan, material_2);\r\nyuan_object.position.set(0,40,0)\r\ngroup.add(yuan_object)\r\n\r\n\r\nconst yuan_2= new THREE.SphereGeometry(4, 4, 4);\r\nconst texture_4=loader.load('http://114.55.38.94:8001/picture/wenli1.jpg');\r\nconst material_4 = new THREE.MeshLambertMaterial({map: texture_4});\r\nconst yuan_object_2= new THREE.Mesh(yuan_2, material_4);\r\nyuan_object_2.position.set(20,70,20)\r\ngroup.add(yuan_object_2)\r\nconst yuan_3= new THREE.SphereGeometry(4, 4, 4);\r\nconst yuan_object_3= new THREE.Mesh(yuan_3, material_4);\r\nyuan_object_3.position.set(20,70,-20)\r\ngroup.add(yuan_object_3)\r\n\r\n\r\nconst yuan_zhui = new THREE.ConeGeometry(10,50,30);\r\nconst texture_3=loader.load('http://114.55.38.94:8001/picture/wenli3.jpg');\r\nconst material_3 = new THREE.MeshLambertMaterial({map: texture_3});\r\nconst yuan_zhui_object= new THREE.Mesh(yuan_zhui, material_3);\r\nconst yuan_zhui_object_2= new THREE.Mesh(yuan_zhui, material_3);\r\nyuan_zhui_object.position.set(0,80,40)\r\nyuan_zhui_object.rotation.set(45,0,0)\r\nyuan_zhui_object_2.position.set(0,80,-40)\r\nyuan_zhui_object_2.rotation.set(-45,0,0)\r\n\r\nfunction createCubeMap() {\r\n  //天空盒纹理本地地址\r\n  var path = \"http://114.55.38.94/api/\";\r\n  var format = '.jpg';\r\n  //引号内为图片名\r\n  var urls = [\r\n    path + 'up' + format, path + 'down' + format,\r\n    path + 'left' + format, path + 'right' + format,\r\n    path + 'front' + format, path + 'back' + format\r\n  ];\r\n  const reflectionCube = new THREE.CubeTextureLoader().load( urls );\r\n  const cubeMaterial3 = new THREE.MeshLambertMaterial( { color: 0xff6600, envMap: reflectionCube, combine: THREE.MixOperation, reflectivity: 0.3 } );\r\n  return cubeMaterial3;\r\n}\r\n\r\n\r\nvar textureCube = createCubeMap();\r\ntextureCube.format = THREE.RGBFormat;\r\n\r\n// create a custom shader\r\nvar shader = THREE.ShaderLib[\"cube\"];\r\nshader.uniforms[\"tCube\"].value = textureCube;\r\nvar material = new THREE.ShaderMaterial({\r\n  fragmentShader: shader.fragmentShader,\r\n  vertexShader: shader.vertexShader,\r\n  uniforms: shader.uniforms,\r\n  depthWrite: false,\r\n  side: THREE.DoubleSide\r\n});\r\n//var dynamicEnvMaterial = new THREE.MeshBasicMaterial({envMap: cubeCamera.renderTarget, side: THREE.DoubleSide});\r\nvar envMaterial = new THREE.MeshBasicMaterial({envMap: textureCube, side: THREE.DoubleSide});\r\n\r\nvar skybox = new THREE.Mesh(new THREE.BoxGeometry(10000, 10000, 10000),envMaterial);\r\nscene.add(skybox);\r\n\r\n\r\n\r\nvar ambientLight = new THREE.AmbientLight(0x0c0c0c,1);\r\nscene.add(ambientLight);\r\n\r\nvar spotLight = new THREE.SpotLight(0xffffff);\r\nspotLight.position.set(50, 100, 0);\r\nspotLight.castShadow = true;\r\nscene.add(spotLight)\r\n\r\nvar controls = new function () {\r\n  this.rotationSpeed=0\r\n};\r\n\r\nconst gui=new dat.GUI();\r\ngui.add(controls, 'rotationSpeed', 0, 0.5);\r\n\r\nconst camera = new THREE.PerspectiveCamera();\r\n//camera.position.set(200, 200, 200);\r\ncamera.position.set(200, 200, 200);\r\ncamera.lookAt(0, 0, 0);\r\nconst axis=new THREE.Vector3(0,1,0)\r\nRender();\r\n\r\n\r\n\r\n\r\nfunction Render() {\r\n  stats0.update();\r\n  scene.traverse(function () {\r\n    //group.rotation.x += controls.rotationSpeed;\r\n    //group.rotation.y += controls.rotationSpeed;\r\n    //group.rotation.z += controls.rotationSpeed;\r\n    group.rotateOnAxis(axis,Math.PI/8*controls.rotationSpeed)\r\n  });\r\n  requestAnimationFrame(Render);\r\n  renderer.render(scene, camera);\r\n}\r\n\r\nfunction initStats() {\r\n\r\n  var stats= new Stats();\r\n\r\n  stats.setMode(0); // 0: fps, 1: ms\r\n\r\n  // Align top-left\r\n  stats.domElement.style.position = 'absolute';\r\n  stats.domElement.style.left = '0px';\r\n  stats.domElement.style.top = '0px';\r\n\r\n  canvas.appendChild(stats.domElement);\r\n\r\n  return stats;\r\n}\r\n\r\n\r\n\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}