{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["D:\\lin_hai_bo_ke\\qian_duan_2\\src\\Views\\Threee1.vue"],"sourcesContent":["<template>\r\n  <canvas></canvas>\r\n</template>\r\n<script>\r\nimport * as THREE from 'three'\r\nconst canvas=document.createElement('canvas')\r\ncanvas.width=800;\r\ncanvas.height=800;\r\ndocument.body.appendChild(canvas)\r\nconst scene=new THREE.Scene();\r\n\r\nconst pg= new THREE.PlaneBufferGeometry(60,20, 1, 1);\r\nconst pm = new THREE.MeshBasicMaterial({color: 0xcccccc});\r\nconst p = new THREE.Mesh(pg,pm);\r\np.rotation.x=15\r\np.rotation.y=0\r\np.rotation.z=0\r\np.rotation.x=-0.5*Math.PI;\r\n\r\nconst geometry = new THREE.BoxGeometry(10, 10, 10);\r\nconst material = new THREE.MeshBasicMaterial({\r\n  color: 0x0000ff,\r\n});\r\nconst mesh = new THREE.Mesh(geometry, material);\r\nscene.add(mesh);\r\nconst camera = new THREE.PerspectiveCamera();\r\ncamera.position.set(200, 200, 200);\r\ncamera.lookAt(0, 0, 0); //坐标原点\r\n// 创建渲染器对象\r\nconst renderer = new THREE.WebGLRenderer({\r\n  canvas:canvas//渲染结果输出画布：canvas\r\n});\r\nrenderer.render(scene, camera); //执行渲染操作\r\n\r\n\r\n\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}