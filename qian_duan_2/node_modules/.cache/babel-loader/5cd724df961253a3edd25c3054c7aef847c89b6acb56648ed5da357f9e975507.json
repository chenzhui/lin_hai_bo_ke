{"ast":null,"code":"import { onMounted, ref } from \"vue\";\nexport default {\n  setup() {\n    const target1 = ref(null);\n    const option = {\n      rootMargin: \"1px 2px 3px 4px\"\n    };\n    onMounted(() => {\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(item => {\n          if (item.isIntersecting) {\n            console.log(item);\n          }\n        });\n      });\n      observer.observe(target1.value);\n    });\n    return {\n      target1\n    };\n  },\n  data() {\n    return {};\n  }\n};","map":{"version":3,"names":["onMounted","ref","setup","target1","option","rootMargin","observer","IntersectionObserver","entries","forEach","item","isIntersecting","console","log","observe","value","data"],"sources":["D:\\lin_hai_bo_ke\\qian_duan_2\\src\\Views\\Test.vue"],"sourcesContent":["<template>\r\n  <div style=\"width:50rem;height:50rem;\"></div>\r\n  <div id=\"target1\" ref=\"target1\" style=\"width:10rem;height:10rem;background-color:white;\"></div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport {onMounted, ref} from \"vue\";\r\n\r\nexport default {\r\nsetup(){\r\nconst target1 = ref(null)\r\nconst option={\r\nrootMargin:\"1px 2px 3px 4px\"\r\n}\r\nonMounted(()=>{\r\n  const observer=new IntersectionObserver((entries)=>{\r\n    entries.forEach(item=>{\r\n      if(item.isIntersecting){\r\n        console.log(item)\r\n      }\r\n    })\r\n  })\r\n  observer.observe(target1.value)\r\n})\r\nreturn{\r\n  target1\r\n}\r\n},\r\ndata(){\r\nreturn{\r\n\r\n}\r\n}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAOA,SAAQA,SAAS,EAAEC,GAAG,QAAO,KAAK;AAElC,eAAe;EACfC,KAAKA,CAAA,EAAE;IACP,MAAMC,OAAM,GAAIF,GAAG,CAAC,IAAI;IACxB,MAAMG,MAAM,GAAC;MACbC,UAAU,EAAC;IACX;IACAL,SAAS,CAAC,MAAI;MACZ,MAAMM,QAAQ,GAAC,IAAIC,oBAAoB,CAAEC,OAAO,IAAG;QACjDA,OAAO,CAACC,OAAO,CAACC,IAAI,IAAE;UACpB,IAAGA,IAAI,CAACC,cAAc,EAAC;YACrBC,OAAO,CAACC,GAAG,CAACH,IAAI;UAClB;QACF,CAAC;MACH,CAAC;MACDJ,QAAQ,CAACQ,OAAO,CAACX,OAAO,CAACY,KAAK;IAChC,CAAC;IACD,OAAM;MACJZ;IACF;EACA,CAAC;EACDa,IAAIA,CAAA,EAAE;IACN,OAAM,CAEN;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}