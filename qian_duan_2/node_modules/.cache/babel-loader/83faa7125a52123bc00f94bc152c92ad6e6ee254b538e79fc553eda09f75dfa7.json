{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"background-color\": \"black\",\n    \"width\": \"800px\",\n    \"height\": \"800px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\", _hoisted_1);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1"],"sources":["D:\\lin_hai_bo_ke\\qian_duan_2\\src\\Views\\Threee1.vue"],"sourcesContent":["<template>\r\n  <canvas style=\"background-color:black;width:800px;height:800px;\"></canvas>\r\n</template>\r\n<script>\r\nimport * as THREE from 'three'\r\nconst canvas=document.createElement('canvas')\r\ncanvas.width=800;\r\ncanvas.height=800;\r\ncanvas.style.background='black'\r\ndocument.body.appendChild(canvas)\r\nconst scene=new THREE.Scene();\r\n\r\nconst geometry = new THREE.BoxGeometry(100, 100, 100);\r\nconst material = new THREE.MeshBasicMaterial({\r\n  color: 0x0000ff,\r\n});\r\nconst mesh = new THREE.Mesh(geometry, material);\r\nscene.add(mesh);\r\nconst camera = new THREE.PerspectiveCamera();\r\ncamera.position.set(200, 200, 200);\r\ncamera.lookAt(0, 0, 0); //坐标原点\r\n// 创建渲染器对象\r\nconst renderer = new THREE.WebGLRenderer({\r\n  canvas:canvas//渲染结果输出画布：canvas\r\n});\r\nrenderer.render(scene, camera); //执行渲染操作\r\n\r\n\r\n\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EACUA,KAAwD,EAAxD;IAAA;IAAA;IAAA;EAAA;AAAwD;;uBAAhEC,mBAAA,CAA0E,UAA1EC,UAA0E"},"metadata":{},"sourceType":"module","externalDependencies":[]}